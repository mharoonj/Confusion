{"version":3,"sources":["shared/dishes.js","components/CommentForm.js","components/LoadingComponent.js","shared/baseUrl.js","components/DishdetailComponent.js","components/MenuComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/prommotions.js","redux/comments.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["DISHES","id","name","image","category","label","price","featured","description","required","val","length","maxLength","len","CommentForm","props","state","modal","handleSubmit","bind","values","this","postComment","dishId","rating","author","comment","Modal","isOpen","isOpened","toggle","ModalHeader","ModalBody","onSubmit","Row","className","Label","htmlFor","md","Col","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","size","Button","type","color","Component","Loading","baseUrl","DishDetail","isModalOpen","toggleModal","setState","dish","comments","map","index","key","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","in","transformProps","exitTransform","Card","CardImg","top","src","alt","CardBody","CardTitle","CardText","RenderDish","RenderComments","onClick","outline","class","aria-hidden","isLoading","errMess","Breadcrumb","BreadcrumbItem","to","active","Menu","selectedDish","menu","dishes","width","CardImgOverlay","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","Media","tag","leaders","left","middle","object","body","heading","About","CardHeader","title","list","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","then","result","resetFeedbackForm","role","offset","checkbox","newFeedback","toISOString","fetch","method","headers","credentials","response","ok","error","Error","status","statusText","json","catch","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","addLeaders","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","addComment","actions","reset","Dishes","action","Promotions","Comments","concat","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6PAAaA,EACT,CACI,CACAC,GAAI,EACJC,KAAK,aACLC,MAAO,gCACPC,SAAU,QACVC,MAAM,MACNC,MAAM,OACNC,UAAU,EACVC,YAAY,oLAEZ,CACAP,GAAI,EACJC,KAAK,eACLC,MAAO,kCACPC,SAAU,YACVC,MAAM,GACNC,MAAM,OACNC,UAAU,EACVC,YAAY,qHAEZ,CACAP,GAAI,EACJC,KAAK,UACLC,MAAO,6BACPC,SAAU,YACVC,MAAM,MACNC,MAAM,OACNC,UAAU,EACVC,YAAY,yEAEZ,CACAP,GAAI,EACJC,KAAK,kBACLC,MAAO,oCACPC,SAAU,UACVC,MAAM,GACNC,MAAM,OACNC,UAAU,EACVC,YAAY,oH,6JCjCdC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IA6F9CC,E,kDA1FX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAO,GAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,yDASNC,GAITC,KAAKN,MAAMO,YAAYD,KAAKN,MAAMQ,OAAQH,EAAOI,OAAQJ,EAAOK,OAAQL,EAAOM,W,+BAKzE,IApBKb,EAoBN,OACP,OACD,6BACK,kBAACc,EAAA,EAAD,CAAOC,OAAQP,KAAKN,MAAMc,SAAUC,OAAQT,KAAKN,MAAMe,QACrD,kBAACC,EAAA,EAAD,CAAaD,OAAQT,KAAKN,MAAMe,QAAhC,kBACA,kBAACE,EAAA,EAAD,KACA,kBAAC,YAAD,CAAWC,SAAU,SAACb,GAAD,OAAY,EAAKF,aAAaE,KACnD,kBAACc,EAAA,EAAD,CAAKC,UAAU,cACf,kBAACC,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,UAC4B,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,OAAT,CAAgBC,MAAM,UAAUvC,KAAK,SACjCiC,UAAU,gBACV,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,yCAIpB,kBAACD,EAAA,EAAD,CAAKC,UAAU,cACH,kBAACC,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,UAAUxC,GAAG,SAASC,KAAK,SAC3CyC,YAAY,YACZR,UAAU,eACVS,WAAY,CACRnC,WAAUoC,WApD3ChC,EAoDgE,EApDxD,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAoD6BD,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIuB,UAAU,cACVM,MAAM,UACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACVoC,UAAW,oCACXjC,UAAW,qCAM3B,kBAACsB,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,IAA7B,WACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQU,SAAT,CAAkBP,MAAM,WAAWxC,GAAG,UAAUC,KAAK,UACjD+C,KAAK,IACLd,UAAU,mBAGtB,kBAACD,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACI,EAAA,EAAD,CAAKD,GAAI,CAACY,KAAK,KACX,kBAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,WAA5B,oB,GA7ElBC,aCRbC,EAAU,WACnB,OACI,yBAAKpB,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCqB,EAAU,yB,QCuMRC,E,kDA3LX,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAM,CACP0C,aAAa,EACbC,aAAa,EACb1C,OAAO,GAGX,EAAKa,OAAS,EAAKA,OAAOX,KAAZ,gBARC,E,qDAWfE,KAAKuC,SAAS,CACZ3C,OAAQI,KAAKL,MAAMC,U,qCAOV4C,GAEX,GAAY,MAARA,EAAa,CAElB,IAAMC,EAAWD,EAAKC,SAASC,KAAI,SAACrC,EAASsC,GAGxC,OACI,yBAAKC,IAAKD,GACN,wBAAI7B,UAAU,iBACV,4BAAKT,EAAQA,SACzB,iCAAOA,EAAQD,OAAf,KAAyB,IAAIyC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAYC,OAAO,IAAIC,KAAKA,KAAKC,MAAM/C,EAAQgD,cAKrJ,OAAO,6BACH,6BACA,wCACA,kBAACvB,EAAA,EAAD,CAAQhB,UAAU,WAAlB,UAEC2B,GAOD,OACI,gC,8EAQDD,GACP,OAAY,MAARA,EAEI,kBAAC,gBAAD,CACAc,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEvB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,IAAKzB,EAAUK,EAAK1D,MAAO+E,IAAKrB,EAAK3D,OAClD,kBAACiF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYvB,EAAK3D,MACjB,kBAACmF,EAAA,EAAD,KAAWxB,EAAKrD,gBAOpB,gC,+BAGF,IAAD,OACA8E,EAAW,SAAC,GAAW,IAAVzB,EAAS,EAATA,KACd,OAAY,MAARA,EAEI,kBAACiB,EAAA,EAAD,KACoB,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,IAAKzB,EAAUK,EAAK1D,MAAO+E,IAAKrB,EAAK3D,OAElE,kBAACiF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAYvB,EAAK3D,MACjB,kBAACmF,EAAA,EAAD,KAAWxB,EAAKrD,eAOtB,+BAIP+E,EAAe,SAAC1B,GAEjB,GAAY,MAARA,EAAa,CAElB,IAAMC,EAAWD,EAAKC,SAASC,KAAI,SAACrC,EAASsC,GAGxC,OACI,yBAAKC,IAAKD,GACN,kBAAC,OAAD,CAAMW,IAAE,GACR,wBAAIxC,UAAU,iBACV,4BAAKT,EAAQA,SACzB,iCAAOA,EAAQD,OAAf,KAAyB,IAAIyC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAYC,OAAO,IAAIC,KAAKA,KAAKC,MAAM/C,EAAQgD,eAOrJ,OAAO,6BACH,6BACA,yCAEA,kBAAC,UAAD,CAASC,IAAE,GAEVb,GAGD,6BACA,kBAACX,EAAA,EAAD,CAAQqC,QAAS,EAAK1D,OAAQ2D,SAAO,EAACpC,MAAM,aAAY,0BAAMqC,MAAM,eAAeC,cAAY,SAA/F,oBAMA,OACI,+BAIZ,OAAItE,KAAKN,MAAM6E,UAEP,yBAAKzD,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPd,KAAKN,MAAM8E,QAEZ,yBAAK1D,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKd,KAAKN,MAAM8E,WAKJ,MAAnBxE,KAAKN,MAAM8C,KAEZ,yBAAK1B,UAAU,aACX,kBAAC,EAAD,CAAaZ,OAAQF,KAAKN,MAAM8C,KAAK5D,GAAIqB,YAAaD,KAAKN,MAAMO,YAAaQ,OAAQT,KAAKS,OAAQD,SAAUR,KAAKL,MAAMC,QACxH,yBAAKkB,UAAU,OACX,kBAAC2D,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAChB,kBAACD,EAAA,EAAD,CAAgBE,QAAM,GAAE5E,KAAKN,MAAM8C,KAAK3D,OAE5C,yBAAKiC,UAAU,UACX,4BAAKd,KAAKN,MAAM8C,KAAK3D,MACrB,+BAGR,yBAAKiC,UAAU,OACX,yBAAKA,UAAU,uBACX,kBAACmD,EAAD,CAAYzB,KAAMxC,KAAKN,MAAM8C,QAEjC,yBAAK1B,UAAU,uBACX,kBAACoD,EAAD,CAAgBjE,YAAaD,KAAKN,MAAMO,YAAawC,SAAUzC,KAAKN,MAAM+C,mBApBzF,M,GA7JYR,aCqFV4C,E,kDArFX,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTmF,aAAc,MAJH,E,yDAQNtC,GACTxC,KAAKuC,SAAS,CAAEuC,aAActC,M,iCAGvBA,GACP,OAAY,MAARA,EAEG,kBAAC,EAAD,CAAYsC,aAAetC,IAI1B,gC,+BAIR,IAAMuC,EAAO/E,KAAKN,MAAMsF,OAAOA,OAAOtC,KAAI,SAACF,EAAMG,GAE7C,OACE,yBAAKC,IAAKD,EAAQ7B,UAAU,uBAE1B,kBAAC2C,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMkB,GAAE,gBAAWnC,EAAK5D,KACpB,kBAAC8E,EAAA,EAAD,CAASuB,MAAM,OAAOrB,IAAKzB,EAAQK,EAAK1D,MAAO+E,IAAKrB,EAAK3D,OACzD,kBAACqG,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,KAAYvB,EAAK3D,aAQjC,OAAImB,KAAKN,MAAMsF,OAAOT,UAEd,yBAAKzD,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPd,KAAKN,MAAMsF,OAAOR,QAEnB,yBAAK1D,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKd,KAAKN,MAAMsF,OAAOR,YAQvC,yBAAK1D,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC2D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAChB,kBAACD,EAAA,EAAD,CAAgBE,QAAM,GAAtB,SAEJ,yBAAK9D,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACViE,Q,GA5EF9C,a,SCGnB,SAASkD,EAAWzF,GAAO,IAElB0F,EAA2B1F,EAA3B0F,KAAMb,EAAqB7E,EAArB6E,UAAWC,EAAU9E,EAAV8E,QAKxB,OAAID,EACK,kBAAC,EAAD,MACEC,EACF,4BAAKA,GAGV,kBAAC,gBAAD,CACUlB,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASE,IAAKzB,EAAUiD,EAAKtG,MAAO+E,IAAKuB,EAAKvG,OAC9C,kBAACiF,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAAYqB,EAAKvG,MAChBuG,EAAKC,YAAc,kBAACC,EAAA,EAAD,KAAeF,EAAKC,aAA8B,KACtE,kBAACrB,EAAA,EAAD,KAAWoB,EAAKjG,gBAoCrBoG,MA7Bf,SAAc7F,GAEZ,OACE,yBAAKoB,UAAU,aACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qBACb,kBAACqE,EAAD,CACEC,KAAM1F,EAAM8C,KACZ+B,UAAW7E,EAAM8F,cACjBhB,QAAS9E,EAAM+F,iBAInB,yBAAK3E,UAAU,qBACf,kBAACqE,EAAD,CACIC,KAAM1F,EAAMgG,UACZnB,UAAW7E,EAAMiG,aACjBnB,QAAS9E,EAAMkG,eAJnB,YAMA,yBAAK9E,UAAU,qBACb,kBAACqE,EAAD,CAAYC,KAAM1F,EAAMmG,OACtBtB,UAAW7E,EAAMoG,cACjBtB,QAAS9E,EAAMqG,oB,kBCzD3B,SAASC,EAAatG,GAElB,OACI,kBAAC,UAAD,CAAS4D,IAAE,GACP,kBAAC,OAAD,CAAMA,IAAE,GACR,kBAAC2C,EAAA,EAAD,CAAOC,IAAI,KAAKtD,IAAKlD,EAAMyG,QAAQvH,GAAIkC,UAAU,QACvD,kBAACmF,EAAA,EAAD,CAAOG,MAAI,EAACC,QAAM,GAChB,kBAACJ,EAAA,EAAD,CAAOK,QAAM,EAAC1C,IAAI,6BAA6BC,IAAI,+BAErD,kBAACoC,EAAA,EAAD,CAAOnF,UAAU,OAAOyF,MAAI,GAC1B,kBAACN,EAAA,EAAD,CAAOO,SAAO,GACX9G,EAAMyG,QAAQtH,MAErB,2BAAIa,EAAMyG,QAAQd,aACd,2BAAI3F,EAAMyG,QAAQhH,iBAyFXsH,MA9Ef,SAAe/G,GAEX,IAAMyG,EAAUzG,EAAMyG,QAAQzD,KAAI,SAACmD,EAAQlD,GACvC,OACI,6BACC,kBAACqD,EAAD,CAAcpD,IAAKD,EAAOwD,QAASN,QAK5C,OACI,yBAAK/E,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC2D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAChB,kBAACD,EAAA,EAAD,CAAgBE,QAAM,GAAtB,aAEJ,yBAAK9D,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAAC2C,EAAA,EAAD,KACI,kBAACiD,EAAA,EAAD,CAAY5F,UAAU,yBAAtB,qBACA,kBAACgD,EAAA,EAAD,KACI,wBAAIhD,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC2C,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAAUhD,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAM6F,MAAM,gBAAZ,0EAQpB,yBAAK7F,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UAEX,kBAACmF,EAAA,EAAD,CAAOW,MAAI,GAENT,O,2FCOVU,G,kDArGb,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IAEDoH,UAAY,EAAKA,UAAUhH,KAAf,gBACjB,EAAKH,MAAQ,CACXoH,WAAW,EACX1E,aAAa,GAEf,EAAKC,YAAc,EAAKA,YAAYxC,KAAjB,gBACnB,EAAKkH,YAAc,EAAKA,YAAYlH,KAAjB,gBATF,E,wDAWPmH,GACVjH,KAAKsC,cACL4E,MAAM,aAAelH,KAAKmH,SAASC,MAAQ,cAAgBpH,KAAKqH,SAASD,MACnE,cAAgBpH,KAAKsH,SAASC,SACpCN,EAAMO,mB,oCAKNxH,KAAKuC,SAAS,CACZF,aAAcrC,KAAKL,MAAM0C,gB,kCAK3BrC,KAAKuC,SAAS,CACZwE,WAAY/G,KAAKL,MAAMoH,c,+BAGjB,IAAD,OACP,OACA,kBAAC,IAAMU,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MACN,yBAAK9G,UAAU,aACX,kBAAC+G,EAAA,EAAD,CAAe1D,QAASnE,KAAK8G,YAC7B,kBAACgB,EAAA,EAAD,CAAahH,UAAU,UAAUiH,KAAK,KAAI,yBAAKnE,IAAI,yBAAyBoE,OAAO,KAAK/C,MAAM,KAAKpB,IAAI,2BACvG,kBAACoE,EAAA,EAAD,CAAU1H,OAAQP,KAAKL,MAAMoH,UAAWmB,QAAM,GAC1C,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACX,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAY6D,GAAG,SAAQ,0BAAM7D,UAAU,qBAA1D,UAEJ,kBAACsH,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAW6D,GAAG,YAAW,0BAAM7D,UAAU,qBAA5D,cAEJ,kBAACsH,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAY6D,GAAG,SAAQ,0BAAM7D,UAAU,qBAA1D,UAEJ,kBAACsH,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAW6D,GAAG,cAAa,0BAAM7D,UAAU,6BAA9D,iBAGJ,kBAACqH,EAAA,EAAD,CAAKrH,UAAU,UAAUoH,QAAM,GAC3B,kBAACE,EAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQsC,SAAO,EAACD,QAASnE,KAAKsC,aAAa,0BAAMxB,UAAU,wBAA3D,eAM9B,kBAACuH,EAAA,EAAD,KACK,yBAAKvH,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAACR,EAAA,EAAD,CAAOC,OAAQP,KAAKL,MAAM0C,YAAa5B,OAAQT,KAAKsC,aACvC,kBAAC5B,EAAA,EAAD,CAAaD,OAAQT,KAAKsC,aAA1B,SACA,kBAAC3B,EAAA,EAAD,KAEA,kBAAC2H,EAAA,EAAD,CAAM1H,SAAUZ,KAAKgH,aACb,kBAACuB,EAAA,EAAD,KACI,kBAACxH,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACwH,GAAA,EAAD,CAAOzG,KAAK,OAAOnD,GAAG,WAAWC,KAAK,WAClC4J,SAAU,SAACC,GAAD,OAAW,EAAKvB,SAAWuB,MAE7C,kBAACH,EAAA,EAAD,KACI,kBAACxH,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACwH,GAAA,EAAD,CAAOzG,KAAK,WAAWnD,GAAG,WAAWC,KAAK,WACtC4J,SAAU,SAACC,GAAD,OAAW,EAAKrB,SAAWqB,MAE7C,kBAACH,EAAA,EAAD,CAAWI,OAAK,GACZ,kBAAC5H,EAAA,EAAD,CAAO4H,OAAK,GACR,kBAACH,GAAA,EAAD,CAAOzG,KAAK,WAAWlD,KAAK,WAC5B4J,SAAU,SAACC,GAAD,OAAW,EAAKpB,SAAWoB,KAFzC,gBAMJ,kBAAC5G,EAAA,EAAD,CAAQC,KAAK,SAASqF,MAAM,SAASpF,MAAM,WAA3C,iB,GA7FPC,aC6CN2G,OA/Cf,SAAgBlJ,GACZ,OACA,yBAAKoB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACd,4BAAI,kBAAC,IAAD,CAAM6D,GAAG,SAAT,SACA,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAK7D,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAGiH,KAAK,6BAAR,wBAI1C,yBAAKjH,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCiH,KAAK,uBAAsB,uBAAGjH,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCiH,KAAK,2CAA0C,uBAAGjH,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCiH,KAAK,+BAA8B,uBAAGjH,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCiH,KAAK,uBAAsB,uBAAGjH,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCiH,KAAK,uBAAsB,uBAAGjH,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBiH,KAAK,WAAU,uBAAGjH,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,kBCnCd1B,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDgC,GAAY,SAAChC,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpDqJ,GAAW,SAACxJ,GAAD,OAAUyJ,MAAMC,OAAO1J,KAClC2J,GAAa,SAAC3J,GAAD,MAAS,4CAA4C4J,KAAK5J,IAmN9D6J,G,kDA9MX,WAAYxJ,GAAQ,IAAD,8BACf,cAAMA,IAKDG,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,yDAWNC,GACToJ,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUvJ,IAClDC,KAAKN,MAAM6J,aAAaxJ,EAAOyJ,UAAUzJ,EAAO0J,SAAU1J,EAAO2J,OAAQ3J,EAAO4J,MAAO5J,EAAO6J,MAAO7J,EAAO8J,YAAY9J,EAAO+J,SAASC,MAAK,SAAAC,GACzI9C,MAAM,uBAAuBmC,KAAKC,UAAUU,OAKhDhK,KAAKN,MAAMuK,sB,+BAMN,IAAD,OACJ,OACI,yBAAKnJ,UAAU,aACT,yBAAKA,UAAU,OACb,kBAAC2D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAChB,kBAACD,EAAA,EAAD,CAAgBE,QAAM,GAAtB,eAEJ,yBAAK9D,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAGiH,KAAK,6BAAR,wBAG5C,yBAAKjH,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAYoJ,KAAK,SAC5B,uBAAGA,KAAK,SAASpJ,UAAU,kBAAkBiH,KAAK,oBAAmB,uBAAGjH,UAAU,gBAAlF,SACA,uBAAGoJ,KAAK,SAASpJ,UAAU,gBAAe,uBAAGA,UAAU,gBAAvD,UACA,uBAAGoJ,KAAK,SAASpJ,UAAU,kBAAkBiH,KAAK,6BAA4B,uBAAGjH,UAAU,qBAA3F,aAMZ,yBAAKA,UAAU,mBACZ,yBAAKA,UAAU,UACZ,sDAEF,yBAAKA,UAAU,mBACf,kBAAC,OAAD,CAAMM,MAAM,WAAWR,SAAU,SAACb,GAAD,OAAY,EAAKF,aAAaE,KAE/D,kBAACc,EAAA,EAAD,CAAKC,UAAU,cACH,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,aAAaxC,GAAG,YAAYC,KAAK,YACjDyC,YAAY,aACZR,UAAU,eACVS,WAAY,CACRnC,YAAUoC,UAAWA,GAAU,GAAIjC,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACIuB,UAAU,cACVM,MAAM,aACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACVoC,UAAW,oCACXjC,UAAW,qCAK3B,kBAACsB,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,YAAYxC,GAAG,WAAWC,KAAK,WAC/CyC,YAAY,YACZR,UAAU,eACVS,WAAY,CACRnC,YAAUoC,UAAWA,GAAU,GAAIjC,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACIuB,UAAU,cACVM,MAAM,YACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACVoC,UAAW,oCACXjC,UAAW,qCAK3B,kBAACsB,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACC,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,UAAUxC,GAAG,SAASC,KAAK,SAC3CyC,YAAY,cACZR,UAAU,eACVS,WAAY,CACRnC,YAAUoC,UAAWA,GAAU,GAAIjC,UAAWA,GAAU,IAAKsJ,eAGrE,kBAAC,SAAD,CACI/H,UAAU,cACVM,MAAM,UACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACVoC,UAAW,iCACXjC,UAAW,6BACXsJ,SAAU,wBAK1B,kBAAChI,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,SAASxC,GAAG,QAAQC,KAAK,QACzCyC,YAAY,QACZR,UAAU,eACVS,WAAY,CACRnC,YAAU4J,iBAGlB,kBAAC,SAAD,CACIlI,UAAU,cACVM,MAAM,SACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACV4J,WAAY,6BAK5B,kBAACnI,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACI,EAAA,EAAD,CAAKD,GAAI,CAACY,KAAM,EAAGsI,OAAQ,IACvB,yBAAKrJ,UAAU,cACX,kBAACC,EAAA,EAAD,CAAO4H,OAAK,GACR,kBAAC,UAAQyB,SAAT,CAAkBhJ,MAAM,SAASvC,KAAK,QAClCiC,UAAU,qBAFlB,IAGa,IACL,0DAIhB,kBAACI,EAAA,EAAD,CAAKD,GAAI,CAACY,KAAM,EAAGsI,OAAQ,IACvB,kBAAC,UAAQhJ,OAAT,CAAgBC,MAAM,eAAevC,KAAK,cACtCiC,UAAU,gBACV,wCACA,4CAIZ,kBAACD,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQU,SAAT,CAAkBP,MAAM,WAAWxC,GAAG,UAAUC,KAAK,UACjD+C,KAAK,KACLd,UAAU,mBAGtB,kBAACD,EAAA,EAAD,CAAKC,UAAU,cACX,kBAACI,EAAA,EAAD,CAAKD,GAAI,CAACY,KAAK,GAAIsI,OAAQ,IACvB,kBAACrI,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,WAA5B,2B,GAjMdC,aC8BTsH,GAAe,SAACC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAEjF,IAAMO,EAAc,CAChBb,UAAWA,EACbC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAIX,OAFAO,EAAYhH,MAAO,IAAIF,MAAOmH,cAEvBC,MAAMpI,EAAU,WAAY,CAC/BqI,OAAQ,OACRjE,KAAM8C,KAAKC,UAAUe,GACrBI,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhBX,MAAK,SAAAY,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbd,MAAK,SAAAY,GAAQ,OAAIA,EAASM,UAC1BC,OAAM,SAAAL,GAAY1B,QAAQC,IAAI,gBAAiByB,EAAMf,SAAU5C,MAAM,6CAA6C2D,EAAMf,aA0BhHtE,GAAgB,iBAAK,CACjCzD,KCvG6B,mBD2GjBoJ,GAAe,SAACC,GAAD,MAAY,CACpCrJ,KC3GyB,gBD4GzBsJ,QAASD,IAGAE,GAAW,SAACtG,GAAD,MAAY,CACnCjD,KC/GyB,aDgHzBsJ,QAASrG,IAyBGuG,GAAiB,SAACH,GAAD,MAAc,CACxCrJ,KCxI2B,kBDyI3BsJ,QAASD,IAGAI,GAAc,SAAC/I,GAAD,MAAe,CACtCV,KC9IwB,eD+IxBsJ,QAAS5I,IA0BAgJ,GAAgB,iBAAO,CAChC1J,KCxK0B,mBD2KjB2J,GAAe,SAACN,GAAD,MAAc,CACtCrJ,KC1KyB,gBD2KzBsJ,QAASD,IAGAO,GAAY,SAACC,GAAD,MAAa,CAClC7J,KChLsB,aDiLtBsJ,QAASO,IAuBAC,GAAa,SAAChG,GAAD,MAAW,CACjC9D,KCrMqB,aDsMrBsJ,QAASxF,IAGAiG,GAAgB,SAACV,GAAD,MAAc,CACvCrJ,KC3M0B,iBD4M1BsJ,QAASD,I,kBExKPW,G,kLAMF/L,KAAKN,MAAMsM,cACXhM,KAAKN,MAAMuM,gBACXjM,KAAKN,MAAMwM,cACXlM,KAAKN,MAAMyM,iB,+BAGH,IAAD,OA2CP,OACE,6BACE,kBAAC,GAAD,MACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEzJ,IAAK5C,KAAKN,MAAM4M,SAAS1J,IACzB2J,WAAW,OACXC,QAAS,KAET,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,QAAQC,UApDb,WACf,OACE,kBAAC,EAAD,CACElK,KAAM,EAAK9C,MAAMsF,OAAOA,OAAO2H,QAAO,SAACnK,GAAD,OAAUA,EAAKtD,YAAU,GAC/DsG,cAAe,EAAK9F,MAAMsF,OAAOT,UACjCkB,cAAe,EAAK/F,MAAMsF,OAAOR,QACjCkB,UACE,EAAKhG,MAAMkN,WAAWA,WAAWD,QAC/B,SAACE,GAAD,OAAWA,EAAM3N,YACjB,GAEJyG,aAAc,EAAKjG,MAAMkN,WAAWrI,UACpCqB,aAAc,EAAKlG,MAAMkN,WAAWpI,QACpCqB,OAAQ,EAAKnG,MAAMyG,QAAQA,QAAQwG,QAAO,SAAC9G,GAAD,OAAYA,EAAO3G,YAAU,GACvE4G,cAAe,EAAKpG,MAAMyG,QAAQ5B,UAClCwB,cAAe,EAAKrG,MAAMyG,QAAQ3B,aAsC9B,kBAAC,KAAD,CACEsI,OAAK,EACLL,KAAK,aACLC,UAAW,kBACT,kBAAC,GAAD,CAASnD,aAAcA,GAAcU,kBAAmB,EAAKvK,MAAMuK,uBAGvE,kBAAC,KAAD,CACE6C,OAAK,EACLL,KAAK,QACLC,UAAW,kBAAM,kBAAC,EAAD,CAAM1H,OAAQ,EAAKtF,MAAMsF,YAE5C,kBAAC,KAAD,CAAOyH,KAAK,gBAAgBC,UA9CnB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MAEpB,OACE,kBAAC,EAAD,CACEvK,KACE,EAAK9C,MAAMsF,OAAOA,OAAO2H,QACvB,SAACnK,GAAD,OAAUA,EAAK5D,KAAOoO,SAASD,EAAME,OAAO/M,OAAQ,OACpD,GAEJqE,UAAW,EAAK7E,MAAMsF,OAAOT,UAC7BC,QAAS,EAAK9E,MAAMsF,OAAOR,QAC3B/B,SAAU,EAAK/C,MAAM+C,SAASA,SAASkK,QACrC,SAACtM,GAAD,OAAaA,EAAQH,SAAW8M,SAASD,EAAME,OAAO/M,OAAQ,OAEhEgN,gBAAiB,EAAKxN,MAAM+C,SAAS+B,QACrCvE,YAAa,EAAKP,MAAMO,iBAgCpB,kBAAC,KAAD,CAAO6M,OAAK,EAACL,KAAK,WAAWC,UA3BvB,WACd,OAAO,kBAAC,EAAD,CAAQvG,QAAS,EAAKzG,MAAMyG,QAAQA,aA2BnC,kBAAC,KAAD,CAAUxB,GAAG,aAKnB,kBAAC,GAAD,W,GArFW1C,aA2FJkL,gBAAWC,oBArGF,SAACzN,GAEvB,MAAO,CACLqF,OAAQrF,EAAMqF,OACdvC,SAAU9C,EAAM8C,SAChBmK,WAAYjN,EAAMiN,WAClBzG,QAASxG,EAAMwG,YArBQ,SAACkH,GAAD,MAAe,CACxCpN,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OACXgN,EFfuB,SAACnN,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACgN,GAE7D,IAAMC,EAAa,CACfpN,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIb,OAFAiN,EAAWjK,MAAO,IAAIF,MAAOmH,cAEtBC,MAAMpI,EAAU,WAAY,CAC/BqI,OAAQ,OACRjE,KAAM8C,KAAKC,UAAUgE,GACrB7C,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhBX,MAAK,SAAAY,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbd,MAAK,SAAAY,GAAQ,OAAIA,EAASM,UAC1BlB,MAAK,SAAAY,GAAQ,OAAI0C,EApCI,SAAChN,GAAD,MAAc,CACpC0B,KCJsB,cDKtBsJ,QAAShL,GAkCkBkN,CAAW5C,OACrCO,OAAM,SAAAL,GAAY1B,QAAQC,IAAI,gBAAiByB,EAAMf,SAAU5C,MAAM,4CAA4C2D,EAAMf,aEjB/G7J,CAAYC,EAAQC,EAAQC,EAAQC,KAC/C2L,YAAa,WACXqB,GFuD6B,SAACA,GAI9B,OAFAA,EAAS7H,IAAc,IAEhB+E,MAAMpI,EAAU,UACtB4H,MAAK,SAAAY,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMf,YAGrCC,MAAK,SAAAY,GAAQ,OAAIA,EAASM,UAC1BlB,MAAK,SAAA/E,GAAM,OAAIqI,EAAS/B,GAAUtG,OAClCkG,OAAM,SAAAL,GAAK,OAAIwC,EAASlC,GAAaN,EAAMf,iBEzE9CG,kBAAmB,WACjBoD,EAASG,UAAQC,MAAM,cAEzBxB,cAAe,kBAAMoB,GF0FY,SAACA,GAChC,OAAO9C,MAAMpI,EAAU,YACtB4H,MAAK,SAAAY,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMf,YAGrCC,MAAK,SAAAY,GAAQ,OAAIA,EAASM,UAC1BlB,MAAK,SAAAtH,GAAQ,OAAI4K,EAAS7B,GAAY/I,OACtCyI,OAAM,SAAAL,GAAK,OAAIwC,EAAS9B,GAAeV,EAAMf,iBE1GhDoC,YAAa,kBAAMmB,GFsHY,SAACA,GAI9B,OAFAA,EAAS5B,MAEFlB,MAAMpI,EAAU,cACtB4H,MAAK,SAAAY,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMf,YAGrCC,MAAK,SAAAY,GAAQ,OAAIA,EAASM,UAC1BlB,MAAK,SAAA6B,GAAM,OAAIyB,EAAS1B,GAAUC,OAClCV,OAAM,SAAAL,GAAK,OAAIwC,EAAS3B,GAAab,EAAMf,iBEzI9CqC,aAAa,kBAAKkB,GF2Jc,SAACA,GAC/B,OAAO9C,MAAMpI,EAAU,WACtB4H,MAAK,SAAAY,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMf,YAGnCC,MAAK,SAAAY,GAAQ,OAAIA,EAASM,UAC5BlB,MAAK,SAAAlE,GAAM,OAAIwH,EAASxB,GAAWhG,OACnCqF,OAAM,SAAAL,GAAK,OAAIwC,EAASvB,GAAcjB,EAAMf,oBEnEvBsD,CAA6CrB,K,2BCvI1D2B,GAAS,WAEI,IAFH/N,EAEE,uDAFM,CAAC4E,WAAW,EACzCC,QAAS,KACTQ,OAAO,IAAK2I,EAAW,uCACvB,OAAQA,EAAO5L,MACb,IFHsB,aEMpB,OAAO,gBAAIpC,EAAX,CAAkB4E,WAAW,EAAOC,QAAS,KAAMQ,OAAQ2I,EAAOtC,UAEhE,IFVsB,iBEWlB,OAAO,gBAAI1L,EAAX,CAAkB4E,WAAW,EAAMC,QAAS,KAAMQ,OAAQ,KAE9D,IFZqB,gBEajB,OAAO,gBAAIrF,EAAX,CAAkB4E,WAAW,EAAOC,QAASmJ,EAAOtC,UAC5D,QACE,OAAO1L,ICfAiO,GAAa,WAE0C,IAFzCjO,EAEwC,uDAF/B,CAAE4E,WAAW,EACTC,QAAS,KACToI,WAAW,IAAKe,EAAW,uCAC/D,OAAQA,EAAO5L,MACX,IHCkB,aGAlB,OAAO,gBAAIpC,EAAX,CAAkB4E,WAAW,EAAOC,QAAS,KAAMoI,WAAYe,EAAOtC,UAEtE,IHHsB,iBGIlB,OAAO,gBAAI1L,EAAX,CAAkB4E,WAAW,EAAMC,QAAS,KAAMoI,WAAY,KAElE,IHJqB,gBGKjB,OAAO,gBAAIjN,EAAX,CAAkB4E,WAAW,EAAOC,QAASmJ,EAAOtC,UAExD,QACE,OAAO1L,ICbJkO,GAAW,WAAoD,IAAnDlO,EAAkD,uDAA1C,CAAE6E,QAAS,KAAM/B,SAAS,IAAKkL,EAAW,uCACvE,OAAQA,EAAO5L,MACb,IJDsB,eIEpB,OAAO,gBAAIpC,EAAX,CAAkB6E,QAAS,KAAM/B,SAAUkL,EAAOtC,UAEpD,IJHyB,kBIIvB,OAAO,gBAAI1L,EAAX,CAAkB6E,QAASmJ,EAAOtC,UAEpC,IJXoB,cIYhB,IAAIhL,EAAUsN,EAAOtC,QACrB,OAAO,gBAAK1L,EAAZ,CAAmB8C,SAAU9C,EAAM8C,SAASqL,OAAOzN,KAEvD,QACE,OAAOV,ICfFoO,GAAS,WAEG,IAFFpO,EAEC,uDAFM,CAAC4E,WAAW,EACxCC,QAAS,KACT2B,QAAQ,IAAKwH,EAAS,uCACpB,OAAOA,EAAO5L,MACZ,ILMmB,aKHjB,OAAO,gBAAIpC,EAAX,CAAkB4E,WAAW,EAAOC,QAAS,KAAM2B,QAASwH,EAAOtC,UAEjE,ILDqB,kBKEjB,OAAO,gBAAI1L,EAAX,CAAkB4E,WAAW,EAAMC,QAAS,KAAM2B,QAAS,KAE/D,ILHoB,iBKIhB,OAAO,gBAAIxG,EAAX,CAAkB4E,WAAW,EAAOC,QAASmJ,EAAOtC,UAC5D,QACE,OAAO1L,I,6BChBFqO,GAAkB,CAC3BxE,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbC,QAAS,ICEPmE,GCGYC,uBAAYC,2BAAgB,cACtCnJ,OAAQ0I,GACRvH,QAAS4H,GACTtL,SAAUoL,GACVjB,WAAYgB,IACTQ,sBAAY,CAACC,SAAUL,OAE9BM,2BAAgBC,KAAOC,ODWZC,G,kDAlBb,WAAY/O,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAACqF,OAAQrG,GAFN,E,qDAKlB,OACE,kBAAC,YAAD,CAAUsP,MAAOA,IACb,kBAAC,IAAD,KACA,yBAAKnN,UAAU,OACf,kBAAC,GAAD,a,GAVUmB,aECEyM,QACW,cAA7BC,OAAOrC,SAASsC,UAEe,UAA7BD,OAAOrC,SAASsC,UAEhBD,OAAOrC,SAASsC,SAAS7B,MACvB,2DCTN8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrF,MAAK,SAAAsF,GACJA,EAAaC,gBAEdpE,OAAM,SAAAL,GACL1B,QAAQ0B,MAAMA,EAAMf,a","file":"static/js/main.fef7c2e8.chunk.js","sourcesContent":["export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: '/assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        featured: true,\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.'                    \r\n        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: '/assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce'\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: '/assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?'\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: '/assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        featured: false,\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms'\r\n        }\r\n    ];","\r\nimport React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody,  Col, Row, Label } from 'reactstrap';\r\nimport { LocalForm, Errors, Control } from \"react-redux-form\";\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nclass CommentForm extends Component{\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        modal: true\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    \r\n    }\r\n    handleSubmit(values) {\r\n        //console.log('Current State is: ' + JSON.stringify(values));\r\n        //alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    \r\n    \r\n  \r\n    render() {\r\n      return (\r\n     <div>\r\n          <Modal isOpen={this.props.isOpened} toggle={this.props.toggle}>\r\n            <ModalHeader toggle={this.props.toggle}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n            <Row className=\"form-group\">\r\n            <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                        <Col md={12}>\r\n                                            <Control.select model=\".rating\" name=\"rating\"\r\n                                                className=\"form-control\">\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                                <option>6</option>\r\n                                                <option>7</option>\r\n                                                <option>8</option>\r\n                                                <option>9</option>\r\n                                                <option>10</option>\r\n                                            </Control.select>\r\n                                        </Col>\r\n                                    </Row>\r\n                            <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                        <Col md={12}>\r\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                                placeholder=\"Your Name\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                }}\r\n                                                 />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".author\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be greater than 2 characters',\r\n                                                    maxLength: 'Must be 15 characters or less'\r\n                                                }}\r\n                                             />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    \r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                        <Col md={12}>\r\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                                rows=\"6\"\r\n                                                className=\"form-control\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={{size:12}}>\r\n                                            <Button type=\"submit\" color=\"primary\">\r\n                                            Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </LocalForm>\r\n            </ModalBody>\r\n            \r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default CommentForm;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from \"./CommentForm\";\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\nclass DishDetail extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isModalOpen: false,\r\n            toggleModal: false,\r\n            modal: false\r\n        };\r\n       \r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        });\r\n      }\r\n    \r\n \r\n    \r\n\r\n    renderComments(dish) {\r\n        \r\n        if (dish != null){\r\n            \r\n       const comments = dish.comments.map((comment, index)=>{          \r\n          // var date_comment= new Date(comment.date);\r\n           \r\n            return(\r\n                <div key={index}>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>{comment.comment}</li>\r\n            <li>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        });\r\n        return(<div>\r\n            <div>\r\n            <h4>Comments</h4>\r\n            <Button className=\"Primary\">Hello</Button>\r\n            </div>\r\n            {comments}\r\n        \r\n            \r\n        \r\n        </div>);\r\n           \r\n    }else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    componentDidMount(){\r\n     //   console.log(this.props.comments);\r\n    }\r\n\r\n    renderDish(dish) {\r\n        if (dish != null)\r\n            return(\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n    render() {\r\n       const RenderDish=({dish})=> {\r\n            if (dish != null)\r\n                return(\r\n                    <Card>\r\n                                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n\r\n                        <CardBody>\r\n                          <CardTitle>{dish.name}</CardTitle>\r\n                          <CardText>{dish.description}</CardText>\r\n                          \r\n                        </CardBody>\r\n                    </Card>\r\n                );\r\n            else\r\n                return(\r\n                    <div></div>\r\n                );\r\n        }\r\n\r\n      const  RenderComments=(dish)=> {\r\n          \r\n            if (dish != null){\r\n               // console.log(dish);\r\n           const comments = dish.comments.map((comment, index)=>{          \r\n              // var date_comment= new Date(comment.date);\r\n               \r\n                return(\r\n                    <div key={index}>\r\n                        <Fade in>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>{comment.comment}</li>\r\n                <li>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</li>\r\n                        </ul>\r\n                        </Fade>\r\n                    </div>\r\n                );\r\n            });\r\n            //console.log(comments);\r\n            return(<div>\r\n                <div>\r\n                <h4>Comments</h4>\r\n                </div>\r\n                <Stagger in>\r\n\r\n                {comments}\r\n                </Stagger>\r\n                \r\n                <div>\r\n                <Button onClick={this.toggle} outline color=\"secondary\"><span class=\"fa fa-pencil\" aria-hidden=\"true\"></span>\r\nSubmit Comment</Button>\r\n                </div>\r\n            </div>);\r\n               \r\n        }else\r\n                return(\r\n                    <div></div>\r\n                );\r\n        }\r\n\r\n        if (this.props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{this.props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.dish != null) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <CommentForm dishId={this.props.dish.id} postComment={this.props.postComment} toggle={this.toggle} isOpened={this.state.modal} />\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n    \r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{this.props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={this.props.dish} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderComments postComment={this.props.postComment} comments={this.props.comments} />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n            );\r\n        }\r\n       \r\n        \r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\n\r\n    import { Card, CardImg, CardImgOverlay,\r\n        CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\nimport DishDetail from \"./DishdetailComponent\";    \r\nimport {Loading} from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nclass Menu extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n    }\r\n\r\n    onDishSelect(dish) {\r\n        this.setState({ selectedDish: dish});\r\n    }\r\n\r\n    renderDish(dish) {\r\n        if (dish != null)\r\n            return(\r\n               <DishDetail selectedDish= {dish} />\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n    render() {\r\n        const menu = this.props.dishes.dishes.map((dish, index) => {\r\n          \r\n            return (\r\n              <div key={index}  className=\"col-12 col-md-5 m-1\">\r\n                \r\n                <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl+dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n              </div>\r\n            );\r\n        });\r\n\r\n        if (this.props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{this.props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            \r\n                  \r\n                    {/* {this.renderDish(this.state.selectedDish)} */}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from 'react-animation-components';\r\nfunction RenderCard(props) {\r\n  // console.log(\"render card props: \", props)\r\n  const {item, isLoading, errMess}= props;\r\n  // { item, isLoading, errMess }\r\n  //console.log(\"item :\"+ item);\r\n  //console.log(\"isloading :\"+ isLoading);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else\r\n    return (\r\n      <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n    );\r\n}\r\n\r\nfunction Home(props) {\r\n// console.log(\"props:  \",props);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrMess}\r\n          />\r\n          \r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n        <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.leader}\r\n            isLoading={props.leaderLoading}\r\n            errMess={props.leaderErrMess} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {  Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\nfunction RenderLeader(props){\r\n    //console.log(\"LEADERS: \",props);\r\n    return (\r\n        <Stagger in>\r\n            <Fade in>\r\n            <Media tag=\"li\" key={props.leaders.id} className=\"mt-4\">\r\n      <Media left middle>\r\n        <Media object src=\"/assets/images/alberto.png\" alt=\"Generic placeholder image\" />\r\n      </Media>\r\n      <Media className=\"ml-5\" body>\r\n        <Media heading>\r\n          {props.leaders.name}\r\n        </Media>\r\n    <p>{props.leaders.designation}</p>\r\n        <p>{props.leaders.description}</p>\r\n      \r\n       </Media>\r\n    </Media>\r\n            </Fade>\r\n        </Stagger>\r\n        \r\n    \r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader, index) => {\r\n        return (\r\n            <div>\r\n             <RenderLeader key={index} leaders={leader} />   \r\n            </div>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                \r\n                    <Media list>\r\n                       \r\n                        {leaders}\r\n                        \r\n                    </Media>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label } from 'reactstrap';import { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n}\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Ristorante con Fusion</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    \r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n\r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    \r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname, values.telnum, values.email, values.agree, values.contactType,values.message).then(result =>{\r\n            alert(\"New Result Added: \\n\"+JSON.stringify(result))\r\n        });\r\n        \r\n        //alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    \r\n\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            \r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default Contact;","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n      lastname: lastname,\r\n      telnum: telnum,\r\n      email: email,\r\n      agree: agree,\r\n      contactType: contactType,\r\n      message: message,\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = ()=>({\r\n type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\n\r\nexport const dishesFailed = (errmess)=>({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n   });\r\n\r\nexport const addDishes= (dishes) =>({\r\n type: ActionTypes.ADD_DISHES,\r\n payload: dishes\r\n})   \r\n\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n      .then(response => response.json())\r\n    .then(leader => dispatch(addLeaders(leader)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const addLeaders = (leader)=>({\r\n    type: ActionTypes.ADD_LEADER,\r\n    payload: leader\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});","export const ADD_COMMENT= \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADER= \"ADD_LEADER\";","import React, { Component } from \"react\";\r\nimport Menu from \"./MenuComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Contact from \"./ContactComponent\";\r\nimport { actions } from \"react-redux-form\";\r\nimport {\r\n  postComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n  postFeedback\r\n} from \"../redux/ActionCreators\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders:()=> dispatch(fetchLeaders()),\r\n  \r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(\"Dishes state: \",state);\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n  };\r\n};\r\n\r\nclass Main extends Component {\r\n  //   <div className=\"row\">\r\n  //   <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n  //   </div>\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(\r\n              (promo) => promo.featured\r\n            )[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n    const DishWithId = ({ match }) => {\r\n      //console.log(this.state.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10)));\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    const aboutus = () => {\r\n      return <About  leaders={this.props.leaders.leaders} />;\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={this.props.location.key}\r\n            classNames=\"page\"\r\n            timeout={300}\r\n          >\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route\r\n                exact\r\n                path=\"/contactus\"\r\n                component={() => (\r\n                  <Contact postFeedback={postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/menu\"\r\n                component={() => <Menu dishes={this.props.dishes} />}\r\n              />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/aboutus\" component={aboutus} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Dishes = (state = {isLoading: true,\r\n  errMess: null,\r\n  dishes:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_DISHES:{\r\n      //console.log(\"payload: \", action.payload);\r\n            \r\n      return {...state, isLoading: false, errMess: null, dishes: action.payload};}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;          \r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import * as ActionTypes from \"./ActionTypes\";\r\nexport const Leaders= (state= {isLoading: true,\r\n  errMess: null,\r\n  leaders:[]}, action)=>{\r\n    switch(action.type){\r\n      case ActionTypes.ADD_LEADER:{\r\n        //console.log(\"payload: \", action.payload);\r\n              \r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};}\r\n  \r\n          case ActionTypes.LEADERS_LOADING:\r\n              return {...state, isLoading: true, errMess: null, leaders: []}\r\n  \r\n          case ActionTypes.LEADERS_FAILED:\r\n              return {...state, isLoading: false, errMess: action.payload};\r\n      default:\r\n        return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\n\nimport { DISHES } from './shared/dishes';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {dishes: DISHES};\n  }\n  render(){\n  return (\n    <Provider store={store}>\n        <BrowserRouter>\n        <div className=\"App\">\n        <Main />\n      </div>  \n      </BrowserRouter>\n      </Provider>\n  );\n}\n}\n\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from \"../redux/dishes\";\r\nimport { Promotions } from \"../redux/prommotions\";\r\nimport { Comments } from \"../redux/comments\";\r\nimport { Leaders } from \"../redux/leaders\";\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { createForms } from 'react-redux-form';\r\nimport {InitialFeedback} from \"./forms\";\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(combineReducers({\r\n        dishes: Dishes, \r\n        leaders: Leaders,\r\n        comments: Comments,\r\n        promotions: Promotions,\r\n        ...createForms({feedback: InitialFeedback}) \r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}